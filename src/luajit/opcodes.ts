export enum Opcode {
  ISGE = 1,
  ISLT = 0,
  ISLE = 2,
  ISGT = 3,
  ISEQV = 4,
  ISNEV = 5,
  ISEQS = 6,
  ISNES = 7,
  ISEQN = 8,
  ISNEN = 9,
  ISEQP = 10,
  ISNEP = 11,
  ISTC = 12,
  ISFC = 13,
  IST = 14,
  ISF = 15,
  ISTYPE = 16,
  ISNUM = 17,
  MOV = 18,
  NOT = 19,
  UNM = 20,
  LEN = 21,
  ADDVN = 22,
  SUBVN = 23,
  MULVN = 24,
  DIVVN = 25,
  MODVN = 26,
  ADDNV = 27,
  SUBNV = 28,
  MULNV = 29,
  DIVNV = 30,
  MODNV = 31,
  ADDVV = 32,
  SUBVV = 33,
  MULVV = 34,
  DIVVV = 35,
  MODVV = 36,
  POW = 37,
  CAT = 38,
  KSTR = 39,
  KCDATA = 40,
  KSHORT = 41,
  KNUM = 42,
  KPRI = 43,
  KNIL = 44,
  UGET = 45,
  USETV = 46,
  USETS = 47,
  USETN = 48,
  USETP = 49,
  UCLO = 50,
  FNEW = 51,
  TNEW = 52,
  TDUP = 53,
  GGET = 54,
  GSET = 55,
  TGETV = 56,
  TGETS = 57,
  TGETB = 58,
  TGETR = 59,
  TSETV = 60,
  TSETS = 61,
  TSETB = 62,
  TSETM = 63,
  TSETR = 64,
  CALLM = 65,
  CALL = 66,
  CALLMT = 67,
  CALLT = 68,
  ITERC = 69,
  ITERN = 70,
  VARG = 71,
  ISNEXT = 72,
  RETM = 73,
  RET = 74,
  RET0 = 75,
  RET1 = 76,
  FORI = 77,
  JFORI = 78,
  FORL = 79,
  IFORL = 80,
  JFORL = 81,
  ITERL = 82,
  IITERL = 83,
  JITERL = 84,
  LOOP = 85,
  ILOOP = 86,
  JLOOP = 87,
  JMP = 88,
  FUNCF = 89,
  IFUNCF = 90,
  JFUNCF = 91,
  FUNCV = 92,
  IFUNCV = 93,
  JFUNCV = 94,
  FUNCC = 95,
  FUNCCW = 96
};

export enum OpcodeType {
  A,
  D,
  ABC,
  AD
};

export class OpcodeInfo {
  value: Opcode
  type: OpcodeType

  constructor(value: Opcode, type: OpcodeType) {
    this.value = value;
    this.type = type;
  }

  canA(): boolean {
    return this.type === OpcodeType.A ||
      this.type === OpcodeType.ABC ||
      this.type === OpcodeType.AD;
  }

  canB(): boolean {
    return this.type === OpcodeType.ABC;
  }

  canC(): boolean {
    return this.type === OpcodeType.ABC;
  }

  canD(): boolean {
    return this.type === OpcodeType.D ||
      this.type === OpcodeType.AD;
  }
};

const OPCODES_MAP: { [op: number]: OpcodeInfo } = {
  [Opcode.ISLT]: new OpcodeInfo(Opcode.ISLT, OpcodeType.AD),
  [Opcode.ISGE]: new OpcodeInfo(Opcode.ISGE, OpcodeType.AD),
  [Opcode.ISLE]: new OpcodeInfo(Opcode.ISLE, OpcodeType.AD),
  [Opcode.ISGT]: new OpcodeInfo(Opcode.ISGT, OpcodeType.AD),
  [Opcode.ISEQV]: new OpcodeInfo(Opcode.ISEQV, OpcodeType.AD),
  [Opcode.ISNEV]: new OpcodeInfo(Opcode.ISNEV, OpcodeType.AD),
  [Opcode.ISEQS]: new OpcodeInfo(Opcode.ISEQS, OpcodeType.AD),
  [Opcode.ISNES]: new OpcodeInfo(Opcode.ISNES, OpcodeType.AD),
  [Opcode.ISEQN]: new OpcodeInfo(Opcode.ISEQN, OpcodeType.AD),
  [Opcode.ISNEN]: new OpcodeInfo(Opcode.ISNEN, OpcodeType.AD),
  [Opcode.ISEQP]: new OpcodeInfo(Opcode.ISEQP, OpcodeType.AD),
  [Opcode.ISNEP]: new OpcodeInfo(Opcode.ISNEP, OpcodeType.AD),
  [Opcode.ISTC]: new OpcodeInfo(Opcode.ISTC, OpcodeType.AD),
  [Opcode.ISFC]: new OpcodeInfo(Opcode.ISFC, OpcodeType.AD),
  [Opcode.IST]: new OpcodeInfo(Opcode.IST, OpcodeType.D),
  [Opcode.ISF]: new OpcodeInfo(Opcode.ISF, OpcodeType.D),
  [Opcode.ISTYPE]: new OpcodeInfo(Opcode.ISTYPE, OpcodeType.AD),
  [Opcode.ISNUM]: new OpcodeInfo(Opcode.ISNUM, OpcodeType.AD),
  [Opcode.MOV]: new OpcodeInfo(Opcode.MOV, OpcodeType.AD),
  [Opcode.NOT]: new OpcodeInfo(Opcode.NOT, OpcodeType.AD),
  [Opcode.UNM]: new OpcodeInfo(Opcode.UNM, OpcodeType.AD),
  [Opcode.LEN]: new OpcodeInfo(Opcode.LEN, OpcodeType.AD),
  [Opcode.ADDVN]: new OpcodeInfo(Opcode.ADDVN, OpcodeType.ABC),
  [Opcode.SUBVN]: new OpcodeInfo(Opcode.SUBVN, OpcodeType.ABC),
  [Opcode.MULVN]: new OpcodeInfo(Opcode.MULVN, OpcodeType.ABC),
  [Opcode.DIVVN]: new OpcodeInfo(Opcode.DIVVN, OpcodeType.ABC),
  [Opcode.MODVN]: new OpcodeInfo(Opcode.MODVN, OpcodeType.ABC),
  [Opcode.ADDNV]: new OpcodeInfo(Opcode.ADDNV, OpcodeType.ABC),
  [Opcode.SUBNV]: new OpcodeInfo(Opcode.SUBNV, OpcodeType.ABC),
  [Opcode.MULNV]: new OpcodeInfo(Opcode.MULNV, OpcodeType.ABC),
  [Opcode.DIVNV]: new OpcodeInfo(Opcode.DIVNV, OpcodeType.ABC),
  [Opcode.MODNV]: new OpcodeInfo(Opcode.MODNV, OpcodeType.ABC),
  [Opcode.ADDVV]: new OpcodeInfo(Opcode.ADDVV, OpcodeType.ABC),
  [Opcode.SUBVV]: new OpcodeInfo(Opcode.SUBVV, OpcodeType.ABC),
  [Opcode.MULVV]: new OpcodeInfo(Opcode.MULVV, OpcodeType.ABC),
  [Opcode.DIVVV]: new OpcodeInfo(Opcode.DIVVV, OpcodeType.ABC),
  [Opcode.MODVV]: new OpcodeInfo(Opcode.MODVV, OpcodeType.ABC),
  [Opcode.POW]: new OpcodeInfo(Opcode.POW, OpcodeType.ABC),
  [Opcode.CAT]: new OpcodeInfo(Opcode.CAT, OpcodeType.ABC),
  [Opcode.KSTR]: new OpcodeInfo(Opcode.KSTR, OpcodeType.AD),
  [Opcode.KCDATA]: new OpcodeInfo(Opcode.KCDATA, OpcodeType.AD),
  [Opcode.KSHORT]: new OpcodeInfo(Opcode.KSHORT, OpcodeType.AD),
  [Opcode.KNUM]: new OpcodeInfo(Opcode.KNUM, OpcodeType.AD),
  [Opcode.KPRI]: new OpcodeInfo(Opcode.KPRI, OpcodeType.AD),
  [Opcode.KNIL]: new OpcodeInfo(Opcode.KNIL, OpcodeType.AD),
  [Opcode.UGET]: new OpcodeInfo(Opcode.UGET, OpcodeType.AD),
  [Opcode.USETV]: new OpcodeInfo(Opcode.USETV, OpcodeType.AD),
  [Opcode.USETS]: new OpcodeInfo(Opcode.USETS, OpcodeType.AD),
  [Opcode.USETN]: new OpcodeInfo(Opcode.USETN, OpcodeType.AD),
  [Opcode.USETP]: new OpcodeInfo(Opcode.USETP, OpcodeType.AD),
  [Opcode.UCLO]: new OpcodeInfo(Opcode.UCLO, OpcodeType.AD),
  [Opcode.FNEW]: new OpcodeInfo(Opcode.FNEW, OpcodeType.AD),
  [Opcode.TNEW]: new OpcodeInfo(Opcode.TNEW, OpcodeType.AD),
  [Opcode.TDUP]: new OpcodeInfo(Opcode.TDUP, OpcodeType.AD),
  [Opcode.GGET]: new OpcodeInfo(Opcode.GGET, OpcodeType.AD),
  [Opcode.GSET]: new OpcodeInfo(Opcode.GSET, OpcodeType.AD),
  [Opcode.TGETV]: new OpcodeInfo(Opcode.TGETV, OpcodeType.ABC),
  [Opcode.TGETS]: new OpcodeInfo(Opcode.TGETS, OpcodeType.ABC),
  [Opcode.TGETB]: new OpcodeInfo(Opcode.TGETB, OpcodeType.ABC),
  [Opcode.TGETR]: new OpcodeInfo(Opcode.TGETR, OpcodeType.ABC),
  [Opcode.TSETV]: new OpcodeInfo(Opcode.TSETV, OpcodeType.ABC),
  [Opcode.TSETS]: new OpcodeInfo(Opcode.TSETS, OpcodeType.ABC),
  [Opcode.TSETB]: new OpcodeInfo(Opcode.TSETB, OpcodeType.ABC),
  [Opcode.TSETM]: new OpcodeInfo(Opcode.TSETM, OpcodeType.AD),
  [Opcode.TSETR]: new OpcodeInfo(Opcode.TSETR, OpcodeType.ABC),
  [Opcode.CALLM]: new OpcodeInfo(Opcode.CALLM, OpcodeType.ABC),
  [Opcode.CALL]: new OpcodeInfo(Opcode.CALL, OpcodeType.ABC),
  [Opcode.CALLMT]: new OpcodeInfo(Opcode.CALLMT, OpcodeType.AD),
  [Opcode.CALLT]: new OpcodeInfo(Opcode.CALLT, OpcodeType.AD),
  [Opcode.ITERC]: new OpcodeInfo(Opcode.ITERC, OpcodeType.ABC),
  [Opcode.ITERN]: new OpcodeInfo(Opcode.ITERN, OpcodeType.ABC),
  [Opcode.VARG]: new OpcodeInfo(Opcode.VARG, OpcodeType.ABC),
  [Opcode.ISNEXT]: new OpcodeInfo(Opcode.ISNEXT, OpcodeType.AD),
  [Opcode.RETM]: new OpcodeInfo(Opcode.RETM, OpcodeType.AD),
  [Opcode.RET]: new OpcodeInfo(Opcode.RET, OpcodeType.AD),
  [Opcode.RET0]: new OpcodeInfo(Opcode.RET0, OpcodeType.AD),
  [Opcode.RET1]: new OpcodeInfo(Opcode.RET1, OpcodeType.AD),
  [Opcode.FORI]: new OpcodeInfo(Opcode.FORI, OpcodeType.AD),
  [Opcode.JFORI]: new OpcodeInfo(Opcode.JFORI, OpcodeType.AD),
  [Opcode.FORL]: new OpcodeInfo(Opcode.FORL, OpcodeType.AD),
  [Opcode.IFORL]: new OpcodeInfo(Opcode.IFORL, OpcodeType.AD),
  [Opcode.JFORL]: new OpcodeInfo(Opcode.JFORL, OpcodeType.AD),
  [Opcode.ITERL]: new OpcodeInfo(Opcode.ITERL, OpcodeType.AD),
  [Opcode.IITERL]: new OpcodeInfo(Opcode.IITERL, OpcodeType.AD),
  [Opcode.JITERL]: new OpcodeInfo(Opcode.JITERL, OpcodeType.AD),
  [Opcode.LOOP]: new OpcodeInfo(Opcode.LOOP, OpcodeType.AD),
  [Opcode.ILOOP]: new OpcodeInfo(Opcode.ILOOP, OpcodeType.AD),
  [Opcode.JLOOP]: new OpcodeInfo(Opcode.JLOOP, OpcodeType.AD),
  [Opcode.JMP]: new OpcodeInfo(Opcode.JMP, OpcodeType.AD),
  [Opcode.FUNCF]: new OpcodeInfo(Opcode.FUNCF, OpcodeType.A),
  [Opcode.IFUNCF]: new OpcodeInfo(Opcode.IFUNCF, OpcodeType.A),
  [Opcode.JFUNCF]: new OpcodeInfo(Opcode.JFUNCF, OpcodeType.AD),
  [Opcode.FUNCV]: new OpcodeInfo(Opcode.FUNCV, OpcodeType.A),
  [Opcode.IFUNCV]: new OpcodeInfo(Opcode.IFUNCV, OpcodeType.A),
  [Opcode.JFUNCV]: new OpcodeInfo(Opcode.JFUNCV, OpcodeType.AD),
  [Opcode.FUNCC]: new OpcodeInfo(Opcode.FUNCC, OpcodeType.A),
  [Opcode.FUNCCW]: new OpcodeInfo(Opcode.FUNCCW, OpcodeType.A)
};

export function getOpcodeInfo(opcode: Opcode): OpcodeInfo {
  return OPCODES_MAP[opcode];
}
